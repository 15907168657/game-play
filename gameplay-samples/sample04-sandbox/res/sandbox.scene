scene
{
    path = res/sandbox.gpb
    
    node ground
    {
        material = res/ground.material
        rigidbody = res/physics.rigidbody#static_box
    }
    
    node wallWest
    {
        url = wall_west
        material = res/walls.material#w_e
        rigidbody = res/physics.rigidbody#static_box
    }
    
    node wallEast
    {
        url = wall_east
        material = res/walls.material#w_e
        rigidbody = res/physics.rigidbody#static_box
    }
    
    node wallSouth
    {
        url = wall_south
        material = res/walls.material#n_s
        rigidbody = res/physics.rigidbody#static_box
    }
    
    node wallNorth
    {
        url = wall_north
        material = res/walls.material#n_s
        rigidbody = res/physics.rigidbody#static_box
    }
    
    node die_bottom
    {
        material = res/objects.material#die
        rigidbody = res/physics.rigidbody#dynamic_box
    }
    
    node die_top
    {
        material = res/objects.material#die
        rigidbody = res/physics.rigidbody#dynamic_box
    }
    
    node rope
    {
        material = res/objects.material#rope
    }
    
    node door
    {
        material = res/objects.material#door
        rigidbody = res/physics.rigidbody#dynamic_box
    }
    
    node basketball
    {
        material = res/objects.material#basketball
        rigidbody = res/physics.rigidbody#dynamic_sphere
    }
    
    node volleyball
    {
        material = res/objects.material#volleyball
        rigidbody = res/physics.rigidbody#dynamic_sphere
    }
    
    node joint1
    {
        rigidbody = res/physics.rigidbody#rope_joint
        rigidbodymodel = joint1_body
    }
    
    node joint2
    {
        rigidbody = res/physics.rigidbody#rope_joint
        rigidbodymodel = joint2_body
    }
    
    node joint3
    {
        rigidbody = res/physics.rigidbody#rope_joint
        rigidbodymodel = joint3_body
    }
    
    node joint4
    {
        rigidbody = res/physics.rigidbody#rope_joint
        rigidbodymodel = joint4_body
    }
    
    node joint5
    {
        rigidbody = res/physics.rigidbody#rope_joint
        rigidbodymodel = joint5_body
    }
    
    node joint6
    {
        rigidbody = res/physics.rigidbody#rope_joint
        rigidbodymodel = joint6_body
    }
    
    node joint7
    {
        rigidbody = res/physics.rigidbody#rope_joint
        rigidbodymodel = joint7_body
    }
    
    node joint8
    {
        rigidbody = res/physics.rigidbody#rope_joint
        rigidbodymodel = joint8_body
    }
    
    node joint9
    {
        rigidbody = res/physics.rigidbody#rope_joint
        rigidbodymodel = joint9_body
    }
    
    node joint10
    {
        rigidbody = res/physics.rigidbody#rope_joint
        rigidbodymodel = joint10_body
    }
    
    physics
    {
        gravity = 0.0, 0.0, -9.8
        
        constraint
        {
            type = SPRING
            rigidBodyA = die_top
            rigidBodyB = die_bottom
            angularLowerLimit = 0.0, 0.0, 0.0
            angularUpperLimit = 0.0, 0.0, 0.0
            linearLowerLimit = 0.0, 0.0, -10.0
            linearUpperLimit = 0.0, 0.0, 8.0
            linearDampingZ = 0.6
            linearStrengthZ = 5.0
        }
        
        constraint
        {
            type = HINGE
            rigidBodyA = door
            rotationOffsetA = 0.0, 1.0, 0.0, 90.0
            translationOffsetA = 0.0, 0.0, 2.112803
            limits = 0.0, 90.0, 0.5
            breakingImpulse = 80.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint1
            translationOffsetA = -2.7510912, 0.0, 0.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint1
            rigidBodyB = joint2
            translationOffsetA = 2.7510912, 0.0, 0.0
            translationOffsetB = -2.5121255, 0.0, 0.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint2
            rigidBodyB = joint3
            translationOffsetA = 2.5121255, 0.0, 0.0
            translationOffsetB = -2.5070403, 0.0, 0.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint3
            rigidBodyB = joint4
            translationOffsetA = 2.5070403, 0.0, 0.0
            translationOffsetB = -2.4816175, 0.0, 0.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint4
            rigidBodyB = joint5
            translationOffsetA = 2.4816175, 0.0, 0.0
            translationOffsetB = -2.5172091, 0.0, 0.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint5
            rigidBodyB = joint6
            translationOffsetA = 2.5172091, 0.0, 0.0
            translationOffsetB = -2.5121236, 0.0, 0.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint6
            rigidBodyB = joint7
            translationOffsetA = 2.5121236, 0.0, 0.0
            translationOffsetB = -2.5070400, 0.0, 0.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint7
            rigidBodyB = joint8
            translationOffsetA = 2.5070400, 0.0, 0.0
            translationOffsetB = -2.5070391, 0.0, 0.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint8
            rigidBodyB = joint9
            translationOffsetA = 2.5070391, 0.0, 0.0
            translationOffsetB = -2.4997063, 0.0, 0.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint9
            rigidBodyB = joint10
            translationOffsetA = 2.4997063, 0.0, 0.0
            translationOffsetB = -2.7711091, 0.0, 0.0
        }
        
        constraint
        {
            type = SOCKET
            rigidBodyA = joint10
            rigidBodyB = basketball
            translationOffsetA = 2.7711091, 0.0, 0.0
            translationOffsetB = 0.0, -1.0, 0.0
        }
    }
}